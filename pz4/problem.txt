/*Задание:
Создать обобщенный алгоритм, реализующий алгоритм сортировки Шелла, используя 
заданный критерий сравнения элементов. Сортировку массива оформить в виде 
шаблона функций. Шаблонной функции в качестве параметров передаются адреса 
начала и окончания диапазона сортировки, указатель на начало массива шагов, 
количество элементов в массиве шагов и бинарный предикат, задающий критерий 
сравнения сортируемых элементов.
Реализовать класс согласно своему варианту и функциональный класс с 
перегруженными бинарными предикатами, задающими критерии сравнения элементов 
контейнера. Критерий сравнения для элементов типа int: сравниваются значения 
элементов. Критерий сравнения для элементов типа double: сравниваются абсолютные
значения элементов. Критерий сравнения для элементов массива объектов созданного 
класса указан в каждом варианте задания. Сортировать элементы массива для 
нечётных вариантов – по возрастанию, для чётных – по убыванию.

В функции main():
1) создать vector (контейнер STL)  из вещественных чисел (число элементов не менее 100); 
заполнить случайными числами; отсортировать содержимое контейнера по убыванию 
(при сортировки использовать последовательность шагов, предложенную Р.Седжвиком);

2) создать list (контейнер STL) из целых чисел (число элементов не менее 100); 
заполнить случайными числами; отсортировать содержимое контейнера по возрастанию 
(при сортировки использовать последовательность шагов из условия теоремы 1);

3) создать динамический массив объектов созданного класса (число элементов не менее 15); 
заполнить, считывая информацию из заранее созданного неотсортированного файла; 
отсортировать весь массив (при сортировки использовать последовательность шагов, 
предложенную Д.Кнутом).

Вариант 2
а) класс прямоугольный параллелепипед (элементы-данные: длины трёх рёбер, 
имеющих общую вершину);
б) сравниваются объёмы параллелепипедов.*/